<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/jsp/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- <context:component-scan base-package="com.june.app" /> -->
	<context:component-scan base-package="com.june.app"
		use-default-filters="false">
		<context:include-filter expression="org.springframework.stereotype.Controller"
			type="annotation" />
	</context:component-scan>
	<sec:global-method-security
		secured-annotations="enabled" />
	<!-- Configure to plugin JSON as request and response in method handler -->
	<beans:bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<beans:bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</beans:bean>
	<!-- <beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"> 
		<beans:property name="order" value="1" /> <beans:property name="mediaTypes"> 
		<beans:map> <beans:entry key="json" value="application/json" /> </beans:map> 
		</beans:property> <beans:property name="defaultViews"> <beans:list> <beans:bean 
		class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"> 
		</beans:bean> </beans:list> </beans:property> <beans:property name=" ignoreAcceptHeader" 
		value="true" /> </beans:bean> -->
	<beans:bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<beans:property name="contentNegotiationManager">
			<beans:bean
				class="org.springframework.web.accept.ContentNegotiationManager">
				<beans:constructor-arg>
					<beans:list>

						<beans:bean
							class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
							<beans:constructor-arg>
								<beans:map>
									<beans:entry key="html" value="text/html"></beans:entry>
									<beans:entry key="json" value="application/json"></beans:entry>
									<beans:entry key="pdf" value="application/pdf"></beans:entry>
								</beans:map>
							</beans:constructor-arg>
						</beans:bean>

						<beans:bean
							class="org.springframework.web.accept.HeaderContentNegotiationStrategy">

						</beans:bean>
					</beans:list>
				</beans:constructor-arg>
			</beans:bean>
		</beans:property>
		<beans:property name="defaultViews">
			<beans:list>
				<beans:bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
				</beans:bean>
			</beans:list>
		</beans:property>

		<!-- <beans:property name="viewResolvers"> <beans:list> <beans:ref bean="xmlViewResolver"> 
			<beans:ref bean="beanNameViewResolver"> <beans:ref bean="viewResolver"> </beans:ref> 
			</beans:ref> </beans:ref> </beans:list> </beans:property> -->
	</beans:bean>
	<!-- - Message source for this context, loaded from localized "messages_xx" 
		files. - Files are stored inside src/main/resources -->
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basename="messages/messages" />

	<!-- - This bean resolves specific types of exceptions to corresponding 
		logical - view names for error views. -->

	<beans:bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<beans:property name="exceptionMappings">
		
			<beans:props>
				<beans:prop key="org.springframework.security.access.AccessDeniedException">cmn/exception/accessDenied</beans:prop>
				<!-- <beans:prop key="java.lang.Exception">error/exception_error</beans:prop> -->
			</beans:props>
		</beans:property>
		<!-- view name resolved using bean of type InternalResourceViewResolver 
			(declared in mvc-view-config.xml) -->
		<beans:property name="defaultErrorView" value="cmn/exception/exception" />
		<!-- results into 'WEB-INF/jsp/exception.jsp' -->
		<beans:property name="warnLogCategory" value="warn" />
		<!-- needed otherwise exceptions won't be logged anywhere -->
		<!-- <beans:property name="order" value="1" /> -->
	</beans:bean>

	<!-- <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
		</beans:bean> -->

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

</beans:beans>
